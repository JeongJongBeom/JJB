<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jjb.mapper.BoardMapper">
	<!-- 게시판 리스트 기본 -->
	<select id="boardlist" resultType="com.jjb.model.BoardVO">
		<!-- CDATA를 사용해야 부등호 표시(크다,작다)와 닫거나 열거나할때의 <>를 구분해줄수 있음 -->
	<![CDATA[
		select * from ${name}
	]]>
	</select>
	
	<!-- 게시판 리스트 페이징 처리 -->
	<select id="boardListPage" resultType="com.jjb.model.BoardVO">
		select *
		from (select @rownum:=@rownum+1 as rownum, bno, content, nickname, regdate, udate, section
		<if test="bsNum == 'B2-01'">
			,imgname, userid, category
		</if>
		<if test="bsNum == 'B3-01'">
			,contentImg, imgname, userid,profileImg
		</if>
		<if test="bsNum == 'B4-01'|| bsNum == 'B2-01'">
			,title, cnt
		</if>
		<if test="bsNum == 'B4-02' || bsNum == 'B4-03' || bsNum == 'B4-04'">
			,title, cnt, userid,filename, imgname, duration
		</if>	
		<if test="bsNum == 'B6-01'">
			,title, userid, answer
		</if>		
		from (select @rownum:=0) as rownum, ${bsection}	where section =	#{bsNum}
		<if test="cri.keyword!=null">
			and title like concat('%',#{cri.keyword},'%')
		</if>
		<if test="board.category!=null">
			and category like concat('%',#{board.category},'%')
		</if>
		<if test="bsNum == 'B6-01' and sessionqualify lt 2">
			and userid=#{sessionid}
		</if>
		order by <choose>
				<when test="board.orderno == 2">
					cnt
				</when>
				<otherwise>
					bno
				</otherwise>
			</choose> desc) ${bsection} 
	<![CDATA[
		where rownum >(#{cri.pageNum}-1)*#{cri.amount} and rownum<=#{cri.pageNum}*#{cri.amount}
		;
	]]>
	</select>
	
	<!-- 게시판 페이지 개수 -->
	<select id="boardCount" resultType="int">
		select count(*) from ${bsection}
		where section = #{bsNum}
		<if test="cri.keyword!=null">
			and title like concat('%',#{cri.keyword},'%')
		</if>
		<if test="board.category!=null">
			and category like concat('%',#{board.category},'%')
		</if>
	</select>
	
	<!--boardDetailList -->
	<select id="boardDetail" resultType="com.jjb.model.BoardVO">
		select * from ${bsection}
		where bno=#{bno}
	</select>
	
	<!-- 게시판 글쓰기 -->
	<insert id="boardWrite">
		insert into ${bsection} (nickname, userid, content,
		regdate, imgname, section, countImg, profileImg
		<if test="bsNum=='B3-01'">
		, contentImg
		</if>
		<if test="bsNum=='B2-01'">
			,title,category
		</if>
		) values
		(#{nickname},#{userid},
		#{board.content},sysdate(), #{board.imgname},
		#{board.section},#{board.countImg},#{profileImg}
		<if test="bsNum=='B3-01'">
		,#{board.contentImg}
		</if>
		<if test="bsNum=='B2-01'">
			,#{board.title},#{board.category}
		</if>
		)
	</insert>
	
	<!-- 게시판 글수정 -->
	<update id="boardModify">
		update ${bsection} set content = #{board.content}, imgname = #{board.imgname},
		countImg = #{board.countImg}, udate = sysdate()
		<choose>
			<when test="board.section=='B3-01'">
				,contentImg= #{board.contentImg}
			</when>
			<when test="board.section=='B2-01'">
				,title=#{board.title}
			</when>
		</choose>
		where bno=#{board.bno}
	</update>
	
	<!-- 게시판 글삭제 -->
	<delete id="boardDelete">
		delete from ${bsection} where bno=#{bno}
	</delete>
	
	<!-- 댓글 갯수 조회 -->
	<select id="RepCount" resultType="int">
		select count(*) from
		${rsection} where bno=#{bno}
	</select>
	
	<!-- 게시판 댓글 조회 -->
	<select id="repBoardListPage"
		resultType="com.jjb.model.RepBoardVO">
		<!-- CDATA를 사용해야 부등호 표시(크다,작다)와 닫거나 열거나할때의 <>를 구분해줄수 있음 -->
		select *
		from
		(select @rownum:=@rownum+1 as rownum, rno, content,
		userid, nickname
		<if
			test="bsNum == 'B4-01' || bsNum == 'B4-02' || bsNum == 'B4-03' || bsNum == 'B4-04'">
			,section
		</if>
		,udate, likeno

		from (select @rownum:=0) as rownum
		, ${rsection}
		where bno
		= #{bno}
		<if
			test="bsNum == 'B4-01' || bsNum == 'B4-02' || bsNum == 'B4-03' || bsNum == 'B4-04'">
			and section = #{rsNum}
		</if>
		order by rno desc)
		${rsection} 
	<![CDATA[
		where rownum >(#{cri.pageNum}-1)*#{cri.amount} and rownum<=#{cri.pageNum}*#{cri.amount}
		;
	]]>
	</select>
	
	<!-- 댓글 작성 -->
	<insert id="repWrite">
		insert into ${rsection} (bno, userid, nickname,
		content, regdate, section) values
		(#{reboard.bno},#{reboard.userid},#{reboard.nickname},#{reboard.content},sysdate(),#{rsNum});
	</insert>
	
	<!-- 댓글 수정 -->
	<update id="repModify">
		update ${rsection} set content=#{reboard.content},
		udate = sysdate() where rno=#{reboard.rno};
	</update>

	<!-- 댓글 삭제 -->
	<delete id="repDelete">
		delete from ${rsection} where rno = #{rno};
	</delete>
	
	<!-- 게시판 수정페이지 리스트 -->
	<select id="ModifyList" resultType="com.jjb.model.BoardVO">
		select * from ${bsection}
		where bno=#{bno};
	</select>
	
	<!-- 조회수 상승 -->
	<update id="addViewCnt">
		update ${bsection} set cnt = cnt+1 where bno=#{bno};
	</update>
	
	<!-- 좋아요 조회 -->
	<select id="likeck" resultType="int">
		select count(*) from tbl_like where userid = #{userid} and section =#{board.section} and bno = #{board.bno}
	</select>
	
	<!-- 좋아요 -->
	<insert id="like">
		insert into tbl_like (userid, section, bno) values (#{userid}, #{board.section}, #{board.bno});
	</insert>
	
	<!-- 좋아요 취소 -->
	<delete id="unlike">
		delete from tbl_like where userid=#{userid} and section=#{board.section} and bno=#{board.bno};
	</delete>
	
	<!-- 팔로우 조회 -->
	<select id="followck" resultType="int">
		select count(*) from follow_user where userid=#{userid} and chef_followed=#{board.userid}
	</select>
	
	<!-- 키워드 검색 -->
	<insert id="searchKeyword">
		insert into tbl_search (userid, keyword, regdate) values (#{userid}, #{keyword}, now());
	</insert>
	
	<!-- 최근 검색 키워드(최근 7일) -->
	<select id="RecentKeyword" resultType="String">
		select keyword, count(*) from tbl_search where 
		regdate >= (SELECT DATE_ADD(NOW(), INTERVAL -7 DAY)) 
		group by keyword order by count(*) desc
	</select>
	
	<select id="orderRecipe" resultType="com.jjb.model.BoardVO">
		select * from tbl_recipe order by
			<choose>
				<when test="order == 0">
					regdate
				</when>
				<when test="order == 1">
					cnt
				</when>
			</choose>
		desc
	</select>
	
	<!-- 레시피 좋아요순 -->
	<select id="orderRecipe_like" resultType="com.jjb.model.BoardVO">
		select a.bno,count(*),title, imgname from tbl_like a left join tbl_recipe b on a.bno = b.bno where a.section ='B2-01' group by bno order by count(*) desc
	</select>
	
	<!-- 레시피 좋아요순 paging -->
	<select id="likePaging" resultType="com.jjb.model.BoardVO">
		select rownum,bno, nickname, section, imgname, userid, title, count 
		from (select @rownum:=@rownum+1 as rownum, bno, nickname, section, imgname, userid, title, count		
		from (select @rownum:=0) as rownum, (select a.bno, nickname, section, imgname, userid, title, if(count is null, 0, count) as count from (select bno, nickname, section, imgname, userid, title
		from tbl_recipe
		<if test="board.category!=null">
			where category like concat('%',#{board.category},'%')
		</if>
		) a left join (select a.bno,count(*) as count from tbl_like a right join tbl_recipe b on a.bno = b.bno where a.section ='B2-01' 
		group by bno order by count(*) desc) b
        on a.bno = b.bno order by count desc) tbl_recipe) tbl_recipe 
		<![CDATA[
		where rownum >(#{cri.pageNum}-1)*#{cri.amount} and rownum<=#{cri.pageNum}*#{cri.amount}
		]]>
	</select>
	
	<!-- 게시판 글작성_기본 -->
	<insert id="boardWriteBasic">
		insert ${bsection} (title, content, nickname, section, userid, profileImg
		<if test="bsection == 'tbl_board_Event'">
			,imgname,duration
		</if>
		) values (#{board.title}, #{board.content}, #{nickname},#{board.section},#{userid},#{profileImg}
		<if test="bsection == 'tbl_board_Event'">
			,#{board.imgname},#{board.duration}
		</if>
		)
	</insert>
	
	<!-- 게시판 변경_기본 -->
	<update id="boardModifyBasic">
		update ${bsection} set title=#{board.title}, content=#{board.content}, udate=now()
		<if test="bsection == 'tbl_board_Event'">
			,imgname=#{board.imgname}, duration = #{board.duration}
		</if>
		where bno=#{board.bno}
		<if test="bsection == 'tbl_board_Event'">
			and section=#{board.section}
		</if>
	</update>
	
	<!-- 고객센터 답변 수정 및 작성 -->
	<update id="help_answer">
		update tbl_help set answer =#{answer} where bno = #{bno}
	</update>
	
</mapper>